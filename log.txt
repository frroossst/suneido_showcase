!Issues

[SOLVED] Cannot locate QueryView | IDE > View > QueryView
[SOLVED] Cannot locate suneido.db file | Windows hides file extensions by default
[SOLVED] Detailed syntax errors? | IDE > View > LibView
Copy pasted functions from documents don't work sometimes
[SOLVED] Take user input from console | It is not possible
[SOLVED] String length | help > Language > Reference > String
[SOLVED] Latest GO installation |  https://github.com/apmckinlay/gsuneido/releases
File I/O?

--------------------------------------------------------------------------------------------
# Declaring a function

	func = function(parameters)
	
	if parameters = @args then you can pass as many params as you want

	=> Example function
	func = function(x,y)
	{
		return x + y
	}
  	
	Calling the function
		func(1,2) => 3

# String slicing
	str = "hello world"

	.Substr(x,y) to get a substring (Upper bound exclusive like Python)
	x => start index
	y => length

	NOTE : removed in later versions use range instead
		s = <string>
		s[start..end] OR s[start::length]

	str[i] gives single character

	str.Substr(0,10) => "hello worl"
	str.Substr(10) => "d" # All the characters from the 10th index to the end
	str.Substr(6,5) => "world" # From 6th index to the end
	str.Substr(8,5) => "rld" # From 8th index to the end

# Maps and Objects

	Declaring dictionaries (Im just calling them Python dictionaries)

	dict = Object(name : "Jane", age : 20, married : true)
	Print(dict.name) => "Jane"
	dict.name = "John" # same as dict[name] = "John"
	Print(dict.name) => "John"

	# The dictionary works even if the keys aren't explicitly defined as strings

	NOTE : Objects can also be used as arrays obj[0] etc. 

	s = "newKey"
	obj[s] = 123 
	Adds a new "member" or "named member" to the object.

# Exception

	throw "ERROR message"

	try
	catch

# Assignment

	a++  | a+=1
	a--  | a-=1
	a*=1 | a/=1
	
	All of the above are valid assignment operators

# Database

	create customer(name,location) => @ create customer(name,location)
	insert {name: "Jane", location : "Canada" } into customer

	!Throws a syntax error




